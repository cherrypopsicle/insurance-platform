/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ExploitationDetector,
  ExploitationDetectorInterface,
} from "../../contracts/ExploitationDetector";

const _abi = [
  {
    inputs: [],
    name: "checkForExploitationPatterns",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156100195760008061001661001f565b50505b5061008d565b632a2a7adb598160e01b8152600481016020815285602082015260005b8681101561005a57808601518160408401015260208101905061003c565b506020828760640184336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b505050565b60ca8061009b6000396000f3fe60806040523480156016576000806013605e565b50505b5060043610602f5760003560e01c8063859169b414603b575b6000806038605e565b50505b60416059565b60405180821515815260200191505060405180910390f35b600090565b632a2a7adb598160e01b8152600481016020815285602082015260005b868110156097578086015181604084010152602081019050607b565b506020828760640184336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b50505056";

type ExploitationDetectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ExploitationDetectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ExploitationDetector__factory extends ContractFactory {
  constructor(...args: ExploitationDetectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<ExploitationDetector> {
    return super.deploy(overrides || {}) as Promise<ExploitationDetector>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ExploitationDetector {
    return super.attach(address) as ExploitationDetector;
  }
  override connect(signer: Signer): ExploitationDetector__factory {
    return super.connect(signer) as ExploitationDetector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ExploitationDetectorInterface {
    return new utils.Interface(_abi) as ExploitationDetectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ExploitationDetector {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ExploitationDetector;
  }
}
